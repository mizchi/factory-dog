// Generated by CoffeeScript 1.8.0
(function() {
  var FactoryDog, index, randomChar, randomString, utils, uuid;

  uuid = require('node-uuid');

  index = 0;

  randomChar = function() {
    var n;
    n = ~~(Math.random() * 57);
    return String.fromCharCode(65 + n);
  };

  randomString = function(n) {
    var _i, _results;
    if (n == null) {
      n = 10;
    }
    return (function() {
      _results = [];
      for (var _i = 1; 1 <= n ? _i <= n : _i >= n; 1 <= n ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).map(function() {
      return randomChar();
    }).join('');
  };

  utils = {
    unique: uuid,
    incr: function() {
      return index++;
    },
    resetIncr: function() {
      return index = 0;
    },
    gen: function(type) {
      switch (type) {
        case 'number':
          return ~~(Math.random() * 100);
        case 'string':
          return randomString();
        case 'boolean':
          return ~~(Math.random() * 100) % 2 === 0;
        default:
          return {};
      }
    }
  };

  FactoryDog = (function() {
    function FactoryDog() {}

    FactoryDog.utils = utils;

    FactoryDog.defs = {};

    FactoryDog.define = function(name, rule) {
      return this.defs[name] = rule;
    };

    FactoryDog.build = function(name, overrides) {
      var k, obj, rule, v;
      if (overrides == null) {
        overrides = {};
      }
      obj = {};
      rule = this.defs[name];
      for (k in rule) {
        v = rule[k];
        if (overrides[k]) {
          obj[k] = overrides[k];
        } else {
          if (v instanceof Function) {
            obj[k] = v();
          } else if (v === 'number' || v === 'string' || v === 'boolean') {
            obj[k] = utils.gen(v);
          } else {
            obj[k] = v;
          }
        }
      }
      return obj;
    };

    return FactoryDog;

  })();

  module.exports = FactoryDog;

}).call(this);
